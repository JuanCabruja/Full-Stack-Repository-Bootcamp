/* CSS GRID Básico con Media Queries */

[class^="grid-child"] {
    background-color: orange;
    display: flex;
    justify-content:  center;
    align-items: center;
}

.grid-parent {
    display: grid;

    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr) );
    /*El repeat(auto-fit) es una forma de ahorrarse las Media Query con CSS Grid, es algo avanzado*/
    /* grid-template-columns: 1fr 1fr 1fr; */
    grid-template-rows: 1fr 2fr;
    gap: 10px;
}

/* @media only screen and (max-width: 920px) {
    .grid-parent {
        grid-template-columns: 1fr 2fr;
    }
}

@media only screen and (max-width: 768px) {
    .grid-parent{
        grid-template-columns: 1fr ;
    }
} */

/* CSS GRID con Líneas*/

.grid-parent2 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
    gap: 10px;
}

.grid-child-line-1 {
    grid-column: 1 / 3; /* o */ 
    grid-row: 1; /*Uno se refiere a las columnas que toma
     y el otro a la línea. pero en este caso es equivalente*/

}

.grid-child-line-2 {
    grid-column: 3;
    grid-row: 1/3; 
}

.grid-child-line-3 {
    opacity: 0.5;
    z-index: -1;

    grid-column: 1 / 3;
    grid-row: 2 / 5;

}

.grid-child-line-4 {
    grid-column: 3;
    grid-row: 3;
}

.grid-child-line-5 {
    grid-column: 2 / 4;
    grid-row: 4;
}

.grid-child-line-6 {
    grid-column: 1;
    grid-row: 2;
}

/* CSS GRID con Áreas */

.grid-parent3 {
    display: grid;
    gap: 10px;

    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 4fr 1fr;

    grid-template-areas: "nav nav nav"
                        "content1 content2 content3"
                        "footer footer footer";
}

.grid-child-area-1 {
    grid-area: nav;
}

.grid-child-area-2 {
    grid-area: content1;
}

.grid-child-area-3 {
    grid-area: content2;
}

.grid-child-area-4 {
    grid-area: content3;
}

.grid-child-area-5 {
    grid-area: footer;
}